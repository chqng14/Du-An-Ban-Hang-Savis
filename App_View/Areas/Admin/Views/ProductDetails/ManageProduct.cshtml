@model App_Data.Models.ProductDetails

@{
    ViewData["Title"] = "Quản lý sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="notification-toast top-right" id="notification-toast"></div>

<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>QUẢN LÝ SẢN PHẨM</a>
            <a class="breadcrumb-item" href="#">QUẢN LÝ THỰC THỂ SẢN PHẨM</a>
        </nav>
    </div>
</div>

<div class="card">
    <div class="card-body" id="formGen">
        <div style="display: flex; align-items: center; justify-content: space-between;">
            <h5 style="margin: 0;">QUẢN LÝ SẢN PHẨM</h5>
            <button onclick="generate()" class="btn btn-warning">Tạo thực thể</button>
        </div>
        <div class="m-b-15" style="margin-bottom: 30px">
            <div class="row">
                <div id="sanpham" class="col-4" style="margin-top: 10px">
                    <label>NameProduct</label>
                    <select id="IdProduct" class="select2-active" name="IdProduct">
                        @foreach (var item in (SelectList)ViewData["IdProduct"])
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>

                <div class="col-4" style="margin-top: 10px">
                    <label>TypeProduct</label>
                    <select id="IdTypeProduct" class="select2" name="IdTypeProduct">
                        @foreach (var item in (SelectList)ViewData["IdTypeProduct"])
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>

                <div class="col-4" style="margin-top: 10px">
                    <label>Material</label>
                    <select class="select2" id="IdMaterial" name="IdMaterial">
                        @foreach (var item in (SelectList)ViewData["IdMaterial"])
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>

            <div class="row">
                <div class="col-6" style="margin-top: 10px">
                    <label>Color</label>
                    <div class="row">
                        <div class="col-12">
                            <select id="IdColor" class="select2"
                                    multiple="multiple">
                                @foreach (var item in (SelectList)ViewData["IdColor"])
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="col-6" style="margin-top: 10px">
                    <label>Size</label>
                    <div class="row">
                        <div class="col-12">
                            <select id="IdSize" class="select2"
                                    multiple="multiple">
                                @foreach (var item in (SelectList)ViewData["IdSize"])
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="confirm" class="mt-2 mb-2" style="display: none">
    <div class="d-flex justify-content-end">
        <button onclick="Huy()" class="btn btn-warning mr-2">Hủy</button>
        <button onclick="CapNhat()" class="btn btn-warning">Cập nhật</button>
    </div>
</div>

<div class="accordion borderless" id="accordion-borderless">
</div>

<script>

    const URL_CHECK_UPDATE_OR_ADD = 'CheckProductDetailForAddOrUpdate';
    const URL_CREATE_PRODUCT = 'CreateProduct';
    const URL_CREATE_IMAGE = '@Url.Action("CreateImage", "Images", new { area = "Admin" })';
    const URL_DELETE_LIST_IMAGE = '@Url.Action("DeleteImage", "Images", new { area = "Admin" })';
    const URL_UPDATE_PRODUCT_DETAIL = 'UpdateProduct'
    const selectedFiles = {};
    const lstAnhRemove = {};

    $(() => {
        $(".select2-active").select2();
        $('#sanpham').find('input.select2-input').on('keyup', function (e) {
            if (e.keyCode === 13) {
                var inputValue = $(this).val();
                if (inputValue) {
                    $.ajax({
                        url: 'CreateNameProduct',
                        type: 'GET',
                        data: {
                            nameProduct: inputValue,
                        },
                        contentType: 'application/json',
                        success: function (result) {
                            var $select2 = $("[name='IdProduct']");
                            var selectedValue = $select2.val();
                            if (selectedValue && selectedValue.length > 0) {
                                $select2.val(null).trigger('change');
                            }
                            var newOption = new Option(result.tenSanPham, result.idSanPham, true, true);
                            $select2.append(newOption).trigger('change');

                            $(this).val('');
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                            console.log(status);
                            console.log(error);
                            console.log(xhr);
                        }
                    });
                }
            }
        });
    })

    const AddEditor = () => {
        var lstThucThe = $('.accordion').find('.moTa');
        lstThucThe.each(function (index, item) {
            $(item).summernote();
        });
    }


    $(() => $('.select2').select2());
    const disabledFormMain = () => $('#formGen').find('*').prop("disabled", true);
    const unDisabledFormMain = () => $('#formGen').find('*').prop("disabled", false);
    //Huy
    async function Huy() {
        await window.location.reload();
    }

    //itemTemplate
    const ItemTemplate = (index, isUpdate, idProduct, idcolor, idsize, Title, giaNhap, giaBan, soLuong, moTa) => {
        //const escapedMoTa = escape(moTa);
        return         `
            <div class="card item-accordion" data-update="${isUpdate}" data-idproductdetail="${idProduct}">
                <div class="card-header d-flex">
                    <h5 class="card-title">
                        <a data-toggle="collapse" data-IdColor="${idcolor}" data-IdSize="${idsize}"
                           href="#collapseOneBorderless${index}">
                            <span>${Title}</span>
                        </a>
                    </h5>
                    <button class="btn btn-icon btn-primary btn-rounded btn-tone btnn-close">
                        <i class="anticon anticon-close"></i>
                    </button>
                </div>
                <div id="collapseOneBorderless${index}" class="collapse" data-parent="#accordion-borderless">

                    <div class="d-flex">
                        <ul class="nav nav-tabs flex-column" id="myTabVertical" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab-vertical" data-toggle="tab" href="#home-vertical${index}"
                                   role="tab" aria-controls="home-vertical${index}" aria-selected="true">Information</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab-vertical" data-toggle="tab" href="#profile-vertical${index}"
                                   role="tab" aria-controls="profile-${index}" aria-selected="false">Image</a>
                            </li>
                        </ul>

                        <div class="tab-content m-l-15" id="myTabContentVertical">
                            <div class="tab-pane fade show active" id="home-vertical${index}" role="tabpanel"
                                 aria-labelledby="home-tab-vertical${index}">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="form-group col-4">
                                            <label>Giá Nhập</label>
                                            <input min="1" class="form-control formatPrice" name="GiaNhap" value="${giaNhap}"
                                                   placeholder="">
                                        </div>
                                        <div class="form-group col-4">
                                            <label>Giá Bán</label>
                                            <input min="1" class="form-control formatPrice" name="GiaBan" value="${giaBan}"
                                                   placeholder="">
                                        </div>
                                        <div class="form-group col-4">
                                            <label>Số lượng</label>
                                            <input min="1" class="form-control formatNumber" name="SoLuongTon" value="${soLuong}">
                                        </div>
                                        <div class="col-12">
                                                <div class="form-group d-flex align-items-center">
                                                    <div class="switch m-r-10">
                                                        <input type="checkbox" id="switch-${index}" class="switch-2">
                                                        <label for="switch-${index}"></label>
                                                    </div>
                                                    <label>Nổi bật</label>
                                                </div>
                                            </div>

                                        <div class="form-group col-12">
                                            <div class="m-b-5" style="margin-top: 10px;">
                                                <label style="display: block; margin-bottom: 5px;">
                                                    Mô tả sản phẩm
                                                </label>
                                                <div class="moTa" style="width: 100%; " name="MoTa">${moTa}</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="profile-vertical${index}" role="tabpanel"
                                 aria-labelledby="profile-tab-vertical${index}">
                                <div class="card-body">
                                    <div class="upload">
                                        <button name="choseFile" class="custom-btn mb-2">
                                            Choose file
                                        </button>
                                        <input type="file" class="fileInput default-btn 1" multiple hidden>
                                        <div class="container-file" style="display: flex;">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }


    //getDataMain
    const GetDataMain = () => {

        const dataMain = {};
        $('#formGen').find("input, select, textarea").each(function () {

            var fieldType = $(this).attr("type");
            var fieldName = $(this).attr("name");
            var fieldValue;

            if (fieldType === "checkbox" || fieldType === "radio") {
                fieldValue = $(this).is(":checked");
            } else {
                fieldValue = $(this).prop('value');
            }
            if (fieldName) {
                dataMain[fieldName] = fieldValue;
            }

        });
        return dataMain
    }

    //getProduct
    const getProductDetail = data => new Promise((resolve, reject) => {
        $.ajax({
            url: URL_CHECK_UPDATE_OR_ADD,
            type: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (result) {
                resolve(result)
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
                console.log(status);
                console.log(error);
                console.log(xhr);
                reject(error);
            }
        });
    })

    //Check Update or Add to gen Item template
    async function generate() {

        const lstColor = Array.from($('#IdColor option:checked')).map(option => ({ text: option.text, value: option.value }))

        const lstSize = Array.from($('#IdSize option:checked')).map(option => ({ text: option.text, value: option.value }))

        if (!lstSize.length || !lstColor.length) {
            alert('Vui lòng chọn đủ thực thể để bắt đầu gen')
            return;
        }

        disabledFormMain();
        $('#preloader').show();
        $('#confirm').show();

        const ajaxPromises = [];
        const maxPromise = 5;
        const container = $('#accordion-borderless');

        for (let i = 0; i < lstColor.length; i++) {
            for (let j = 0; j < lstSize.length; j++) {
                const index = i * lstSize.length + j;
                const data = { ...GetDataMain(), ...{ 'IdSize': lstSize[j].value, 'IdColor': lstColor[i].value } }
                const promise = getProductDetail(data);
                promise.then((respose) => {
                    if (respose.success) {

                        const itemAppend = $(ItemTemplate(index, true, respose.data.Id, lstColor[i].value, lstSize[j].value, lstColor[i].text + ' - ' + lstSize[j].text, respose.data.GiaNhap, respose.data.GiaBan, respose.data.SoLuongTon, respose.data.MoTa))
                        container.append(itemAppend)
                        if (respose.data.IsNoiBat) {
                            itemAppend.find('.switch-2').prop('checked', true);
                        }
                        const key = itemAppend.find('.collapse').attr('id');
                        const containerFile = itemAppend.find('.upload').find('.container-file');
                        lstAnhRemove[key] = []
                        Array.from(respose.data.LstTenAnh).map((nameFile) => {
                            const wrapper = $('<div>').addClass('wrapper-file');
                            const image = $('<div>').addClass('image');
                            const imageElement = $('<img>').addClass('file-image').attr('src', '/images/anhsanpham/' + nameFile);

                            imageElement.on('click', () =>
                                changeImage(imageElement, nameFile, key)
                            );

                            const closeIcon = $('<i>').addClass('fas fa-times close-icon');


                            image.append(imageElement);
                            image.append(closeIcon);

                            const content = $('<div>').addClass('content');
                            const icon = $('<div>').addClass('icon');
                            icon.html('<i class="fas fa-cloud-upload-alt"></i>');
                            content.append(icon);

                            var cancelBtn = $('<div>').addClass('cancel-btn');
                            cancelBtn.html('<i class="fas fa-times"></i>');

                            wrapper.append(image);
                            wrapper.append(content);
                            wrapper.append(cancelBtn);
                            containerFile.append(wrapper);

                            closeIcon.on('click', function () {
                                const fileInput = wrapper.find('input');
                                if (fileInput.length == 0) {
                                    lstAnhRemove[key].push(nameFile)
                                } else {
                                    const indexDelete = selectedFiles[key].findIndex(item => item.key === nameFile);
                                    selectedFiles[key].splice(indexDelete, 1);
                                }

                                wrapper.remove();
                            });

                            return;
                        });


                    } else {
                        container.append(ItemTemplate(index, false, "", lstColor[i].value, lstSize[j].value, lstColor[i].text + ' - ' + lstSize[j].text, '', '', '', ''))
                    }
                }).catch((er) => console.log(er))

                ajaxPromises.push(promise);

                if (ajaxPromises.length >= maxPromise) {
                    await Promise.all(ajaxPromises);
                    ajaxPromises.length = 0
                }
            }
        }

        await Promise.all(ajaxPromises);
        $(".formatPrice").each(function () {
            var autoNumeric = new AutoNumeric(this, {
                decimalCharacter: ".",
                digitGroupSeparator: ",",
                decimalPlaces: 0,
                currencySymbol: " ₫",
                currencySymbolPlacement: "s",
                minimumValue: 0
            });
        });

        $(".formatNumber").each(function () {
            var autoNumeric = new AutoNumeric(this, {
                decimalCharacter: ".",
                digitGroupSeparator: ",",
                decimalPlaces: 0,
                minimumValue: 0
            });
        });
        $('#preloader').hide();
        AddEditor();
    }

    //close Item gen
    $(document).on('click', '.btnn-close', function () {
        this.closest('.item-accordion').remove();
        if ($('.accordion').find($('.item-accordion')).length===0) {
            unDisabledFormMain();
            $('#confirm').hide();
        }
    })

    //Creat event click for file input
    $(document).on('click', '[name= "choseFile"]', function () {
        $(this).closest('.upload').find('.fileInput').click()
    })

    //change for file element click current
    const changeImage = (imageElement, file, key) => {
        const newInputFile = $('<input>').attr('type', 'file').css('display', 'none');
        newInputFile.on('change', function () {
            const newFile = this.files[0]
            if (newFile) {
                const container = imageElement.closest('.wrapper-file')
                container.append(newInputFile)
                if (newFile && newFile.type.startsWith('image/')) {
                    if (typeof file === 'object' && file instanceof File) {
                        const CheckIndex = selectedFiles[key].findIndex(file => file.data.name === newFile.name);
                        if (CheckIndex !== -1) {
                            alert('File này đã tồn tại')
                        } else {
                            const indexChange = selectedFiles[key].findIndex(item => item.data.name === file.name);
                            imageElement.attr('src', URL.createObjectURL(newFile));
                            selectedFiles[key][indexChange] = newFile;
                        }
                    } else {
                        if (!selectedFiles[key]) {
                            selectedFiles[key] = []
                            selectedFiles[key].push({ key: file, data: newFile });
                            imageElement.attr('src', URL.createObjectURL(newFile));
                            lstAnhRemove[key].push(file)
                        } else {
                            if (Array.from(selectedFiles[key]).find(item => item.data.name === newFile.name)) {
                                alert('File này đã được chọn trước đó!')
                            } else {
                                const foundItem = selectedFiles[key].find(item => item.key === file);
                                if (foundItem) {
                                    selectedFiles[key].find(item => item.key === file).data = newFile;
                                    imageElement.attr('src', URL.createObjectURL(newFile))
                                } else {
                                    selectedFiles[key].push({ key: file, data: newFile })
                                    lstAnhRemove[key].push(file)
                                    imageElement.attr('src', URL.createObjectURL(newFile))
                                    alert('Đã push file');
                                }
                            }
                        }
                    }
                }
            }
        })
        newInputFile.click()
    }

    //When file change
    $(document).on('change', '.fileInput', function () {
        const imageList = $(this).closest('.upload').find('.container-file');
        const key = imageList.closest('.collapse').attr('id');

        Array.from(this.files).map((file) => {
            if (file.type.startsWith("image")) {
                const wrapper = $('<div>').addClass('wrapper-file');
                const image = $('<div>').addClass('image');
                const imageElement = $('<img>').addClass('file-image').attr('src', URL.createObjectURL(file));

                if (!selectedFiles[key]) {
                    selectedFiles[key] = []
                }
                selectedFiles[key].push({ key: "them", data: file });

                imageElement.on('click', () =>
                    changeImage(imageElement, file, key)
                );

                const closeIcon = $('<i>').addClass('fas fa-times close-icon');


                image.append(imageElement);
                image.append(closeIcon);

                const content = $('<div>').addClass('content');
                const icon = $('<div>').addClass('icon');
                icon.html('<i class="fas fa-cloud-upload-alt"></i>');
                content.append(icon);

                var cancelBtn = $('<div>').addClass('cancel-btn');
                cancelBtn.html('<i class="fas fa-times"></i>');

                wrapper.append(image);
                wrapper.append(content);
                wrapper.append(cancelBtn);
                imageList.append(wrapper);

                closeIcon.on('click', function () {
                    const fileInput = wrapper.find('input');
                    if (fileInput.length == 0) {
                        const indexDelete = selectedFiles[key].findIndex(item => item.data.name === file.name);
                        selectedFiles[key].splice(indexDelete, 1);
                    } else {
                        const indexDelete = selectedFiles[key].findIndex(item => item.data.name === fileInput.name);
                        selectedFiles[key].splice(indexDelete, 1);
                    }
                    wrapper.remove();
                });

                return;
            }
            this.files = "";
            alert('Vui lòng chọn đúng định dạng');
        });
    });

    function CapNhat() {
        var items = $('.item-accordion');
        var currentIndex = 0;
        var checkErr = 0;
        var checkSS = 0

        function processNextItem() {
            if (currentIndex >= items.length) {
                if ($('.accordion').find($('.item-accordion')).length === 0) {
                    setTimeout(() => window.location.reload(),1000)
                }
                $('#preloader').hide();
                if (checkSS > 0) {
                    var toastHTML = `<div class="toast fade hide" data-delay="3000">
                                        <div class="toast-header">
                                            <i class="anticon anticon-info-circle text-primary m-r-5"></i>
                                            <strong class="mr-auto">Bootstrap</strong>
                                            <small>1 second ago</small>
                                            <button type="button" class="ml-2 close" data-dismiss="toast" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="toast-body">
                                            ${checkSS} thực thể được cập nhật thành công
                                        </div>
                                    </div>`

                    $('#notification-toast').append(toastHTML)
                    $('#notification-toast .toast').toast('show');
                    setTimeout(function () {
                        $('#notification-toast .toast:first-child').remove();
                    }, 3000);
                    checkErr = 0;
                }

                if (checkErr > 0) {
                    var toastHTML = `<div class="toast fade hide" data-delay="3000">
                                        <div class="toast-header">
                                            <i class="anticon anticon-info-circle text-primary m-r-5"></i>
                                            <strong class="mr-auto">Bootstrap</strong>
                                            <small>1 second ago</small>
                                            <button type="button" class="ml-2 close" data-dismiss="toast" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="toast-body">
                                            Một vài thực thể dữ liệu chưa được nhập.
                                            Vui lòng nhập để tiếp tục
                                        </div>
                                    </div>`

                    $('#notification-toast').append(toastHTML)
                    $('#notification-toast .toast').toast('show');
                    setTimeout(function () {
                        $('#notification-toast .toast:first-child').remove();
                    }, 3000);
                    checkErr = 0;
                }
                return
            }
            const currentItem = items.eq(currentIndex);

            var isUpdate = currentItem.attr('data-update');

            var dataBienThe = {};

            $(currentItem.find('.tab-pane')[0]).find("input, select, textarea").each(function () {
                var fieldType = $(this).attr("type");
                var fieldName = $(this).attr("name");
                var fieldValue;

                if (fieldType === "checkbox" || fieldType === "radio") {
                    fieldValue = $(this).is(":checked");
                } else {
                    if ($(this).hasClass("formatPrice") || $(this).hasClass("formatNumber")) {
                        var fieldValue = $(this).val();
                        fieldValue = BigInt(fieldValue.replace(/₫|,|\s/g, '')).toString();
                    } else {
                        fieldValue = $(this).val();
                    }
                }

                if (fieldName) {
                    dataBienThe[fieldName] = fieldValue;
                }
            });


            const DataInDataset = {}

            Array.from(["IdColor", "IdSize"]).forEach(name => {
                let value = currentItem.attr('data-' + name) || currentItem.find('[data-' + name + ']').attr('data-' + name);
                if (value !== undefined) {
                    DataInDataset[name] = value;
                }
            });

            const moTa = { MoTa: currentItem.find('.moTa').summernote('code') }
            if (isUpdate === 'true') {
                const key = currentItem.find('.collapse').attr('id');


                if (selectedFiles[key] && Array.from(selectedFiles[key]).length>0) {
                    var data = new FormData();
                    Array.from(selectedFiles[key]).map(item => data.append('lstIFormFile', item.data))
                    data.append('idProductDetail', currentItem.attr('data-idproductdetail'));
                    $.ajax({
                        url: URL_CREATE_IMAGE,
                        type: 'POST',
                        data: data,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                            console.log(status);
                            console.log(error);
                            console.log(xhr);
                        }
                    });
                }

                if (lstAnhRemove[key] && Array.from(lstAnhRemove[key]).length>0) {
                    const data = new FormData();
                    lstAnhRemove[key].map(item => data.append('lstImageRemove', item))
                    data.append('idProductDetail', currentItem.attr('data-idproductdetail'))

                    fetch(URL_DELETE_LIST_IMAGE, {
                        method: 'POST',
                        body: data
                    })
                        .then(response => {
                            if (response.ok) {
                                if (response.headers.get("content-length") !== "0") {
                                    return response.json();
                                } else {
                                    return null; // Trả về null nếu không có JSON
                                }
                            }
                            throw new Error('Network response was not ok.');
                        })
                        .then(data => {

                        })
                        .catch(error => {
                            console.error(error);
                        });
                }
                $.ajax({
                    url: URL_UPDATE_PRODUCT_DETAIL,
                    type: 'POST',
                    data: JSON.stringify({ ...GetDataMain(), ...dataBienThe, ...DataInDataset, ...{ Id: currentItem.attr('data-idproductdetail') }, ...moTa, ...{ IsNoiBat: currentItem.find('.switch-2').prop('checked') } }),
                    contentType: 'application/json',
                    success: function (result) {
                        checkSS++;
                        currentItem.remove();
                        currentIndex++;
                        processNextItem();
                    },
                    error: function (xhr, status, error) {
                        checkErr++;
                        console.log(xhr.responseText);
                        console.log(status);
                        console.log(error);
                        console.log(xhr);
                    }
                });


            } else {
                if (dataBienThe.GiaBan && dataBienThe.GiaNhap && dataBienThe.SoLuongTon) {
                    console.log({
                        ...GetDataMain()
                        , ...dataBienThe
                        , ...DataInDataset
                        , ...moTa
                        , ...{ IsNoiBat: currentItem.find('.switch-2').prop('checked') }
                    });
                    $.ajax({
                        url: URL_CREATE_PRODUCT,
                        type: 'POST',
                        data: JSON.stringify({
                            ...GetDataMain()
                            , ...dataBienThe
                            , ...DataInDataset
                            , ...moTa
                            , ...{ IsNoiBat: currentItem.find('.switch-2').prop('checked') }
                            }),
                        contentType: 'application/json',
                        success: function (result) {
                            if (result.success) {
                                const key = currentItem.find('.collapse').attr('id');
                                if (selectedFiles[key] && Array.from(selectedFiles[key]).length > 0) {
                                    var data = new FormData();
                                    selectedFiles[key].map(item => data.append('lstIFormFile', item.data))
                                    data.append('idProductDetail', result.id);
                                    $.ajax({
                                        url: URL_CREATE_IMAGE,
                                        type: 'POST',
                                        data: data,
                                        contentType: false,
                                        processData: false,
                                        success: function (result) {
                                        },
                                        error: function (xhr, status, error) {
                                            console.log(xhr.responseText);
                                            console.log(status);
                                            console.log(error);
                                            console.log(xhr);
                                        }
                                    });
                                }
                                checkSS++;
                                currentItem.remove();
                                currentIndex++;
                                processNextItem();
                            }
                        },
                        error: function (xhr, status, error) {
                            checkErr++;
                            console.log(xhr.responseText);
                            console.log(status);
                            console.log(error);
                            console.log(xhr);
                        }
                    });
                }
                else
                {
                    checkErr++;
                    currentIndex++;
                    processNextItem();
                }
            }
        }
        processNextItem();
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/Admin_assets/vendors/select2/select2.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/autonumeric/4.8.1/autoNumeric.min.js"></script>
    <script src="~/Admin_assets/js/pages/form-elements.js"></script>
}
